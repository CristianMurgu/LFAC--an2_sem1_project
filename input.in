
global()
{
  trying();
  class acesta
  {
    private: int a;
    private: int b;
    public: float be;
            char c;
            int v(int a)
            {
              int an;
              if(a==9)
                a=a * 90;
            }
  }
  float go1;
  go1=7.0;
  int go2;
  go2=7;
  bool go3;
  go3=true;
  string go4;
  go4="salut";
  int f(int a, char c)
  {
    int ro;
    a=3;
    acesta aux;
    return f(a, c);
  }
  float funk()
  {
    int t;
    /*return t;*/
  }
  bool tzac(int a, int b)
  {
    if( a==4 )
      return false;
  }  
}
definitions()
{
  #define int h 4 ;
  #define int r 9 ;
}
main()
{
  A a;
  int const a;
  bool ok, int ji, string js;
  float a;
  int v[10][10];
  a=8.3;
  int gogule;
  gogule=2;
  int i;
  for( i=0; i <= (a+3); i=i+1 )
  {
    ok=false;
    int ant, float erior;
    f(ant, erior);
  }
  string k;
  TypeOf(k);
  Eval(a + v[1][3] + gogule);
  Eval(a == gogule);
  Eval("da" > k);
  while( 1==1 || a==6 )
  {
    i=7;
    a=a-1;
  }
  TypeOf(f);
  TypeOf(a);
  if( 7!=gogule )
  {
    f();
  }

  /*erori*/
  functieInexistenta();

  int gogule;

  nuexist=777;

  string text;
  text="da";
  int kg;
  kg=8;
  kg= text+kg+f();

  a=ok+2;

  Eval( 2+2*4 );

  Eval( 1==0 && a>=1 || (1 || 2 ) );

  a=k-gogule;

  a=17;
  Eval(a);

  cout<<a;
  return 0;
}